import scipy.integrate
import numpy
import matplotlib.pyplot as plt

def SIR_model(y, t, beta, gamma):
    S, I, R = y
    
    ds_dt = - beta * S * I
    di_dt = beta * S * I - gamma * I
    dr_dt = gamma * I
    return([ds_dt, di_dt, dr_dt])
    
    # Initial conditions
S0 = 4017121.9
I0 = 217
R0 = 0.0
beta = 0.000000342
gamma = 0.0666

# time vector
t = numpy.linspace(0, 365, 10000)

# Result
solution = scipy.integrate.odeint(SIR_model, [S0, I0, R0], t, args = (beta, gamma))
solution = numpy.array(solution)

# plot result
plt.figure(figsize = [6, 4])
plt.plot(t, solution[:, 0], label = "S(t)")
plt.plot(t, solution[:, 1], label = "I(t)")
plt.plot(t, solution[:, 2], label = "R(t)")
plt.grid()
plt.legend()
plt.xlabel("Time")
plt.ylabel("Proportions")
plt.title("SIR model 2006")
plt.show()


#Graph – 2
# the rec0very rate is 0.066667 and the infecti0n rate is 0.0000000285.
import scipy.integrate
import numpy
import matplotlib.pyplot as plt
def SIR_model(y, t, beta, gamma):
    S, I, R = y
    ds_dt = - beta * S * I
    di_dt = beta * S * I - gamma * I
    dr_dt = gamma * I
    return([ds_dt, di_dt, dr_dt])
    
    # Initial conditions
S0 = 4067929.1
I0 = 257
R0 = 0.0
beta = 0.000000285
gamma = 0.0666

# time vector
t = numpy.linspace(0, 365, 10000)

# Result
solution = scipy.integrate.odeint(SIR_model, [S0, I0, R0], t, args = (beta, gamma))
solution = numpy.array(solution)

# plot result
plt.figure(figsize = [6, 4])
plt.plot(t, solution[:, 0], label = "S(t)")
plt.plot(t, solution[:, 1], label = "I(t)")
plt.plot(t, solution[:, 2], label = "R(t)")
plt.grid()
plt.legend()
plt.xlabel("Time")
plt.ylabel("Proportions")
plt.title("SIR model 2007")
plt.show()


#Graph – 3
# the rec0very rate is 0.066667 and the infecti0n rate is 0.0000000259
import scipy.integrate
import numpy
import matplotlib.pyplot as plt

def SIR_model(y, t, beta, gamma):
    S, I, R = y
    ds_dt = - beta * S * I
    di_dt = beta * S * I - gamma * I
    dr_dt = gamma * I
    return([ds_dt, di_dt, dr_dt])
    
    # Initial conditions
S0 = 4124118.5
I0 = 236
R0 = 0.0
beta = 0.000000259
gamma = 0.0666

# time vector
t = numpy.linspace(0, 365, 10000)

# Result
solution = scipy.integrate.odeint(SIR_model, [S0, I0, R0], t, args = (beta, gamma))
solution = numpy.array(solution)# plot result
plt.figure(figsize = [6, 4])
plt.plot(t, solution[:, 0], label = "S(t)")
plt.plot(t, solution[:, 1], label = "I(t)")
plt.plot(t, solution[:, 2], label = "R(t)")
plt.grid()
plt.legend()
plt.xlabel("Time")
plt.ylabel("Proportions")
plt.title("SIR model 2008")
plt.show()


#Graph – 4
# the rec0very rate is 0.066667 and the infecti0n rate is 0.0000000291.
import scipy.integrate
import numpy
import matplotlib.pyplot as plt


def SIR_model(y, t, beta, gamma):
    S, I, R = y    
    ds_dt = - beta * S * I
    di_dt = beta * S * I - gamma * I
    dr_dt = gamma * I
    return([ds_dt, di_dt, dr_dt])
    
    # Initial conditions
S0 = 4185682.1
I0 = 146
R0 = 0.0
beta = 0.000000291
gamma = 0.0666

# time vector
t = numpy.linspace(0, 365, 10000)
# Result
solution = scipy.integrate.odeint(SIR_model, [S0, I0, R0], t, args = (beta, gamma))
solution = numpy.array(solution)

# plot result
plt.figure(figsize = [6, 4])
plt.plot(t, solution[:, 0], label = "S(t)")
plt.plot(t, solution[:, 1], label = "I(t)")
plt.plot(t, solution[:, 2], label = "R(t)")
plt.grid()
plt.legend()
plt.xlabel("Time")
plt.ylabel("Proportions")
plt.title("SIR model 2009")
plt.show()


#Graph – 5
# the rec0very rate is 0.066667 and the infecti0n rate is 0.0000000266.
import scipy.integrate
import numpy
import matplotlib.pyplot as plt


def SIR_model(y, t, beta, gamma):
    S, I, R = y
    
    ds_dt = - beta * S * I
    di_dt = beta * S * I - gamma * I
    dr_dt = gamma * I
    return([ds_dt, di_dt, dr_dt])
    
    # Initial conditions
S0 = 4252800.9
I0 = 168
R0 = 0.0
beta = 0.000000266
gamma = 0.0666

# time vector
t = numpy.linspace(0, 365, 10000)
# Result
solution = scipy.integrate.odeint(SIR_model, [S0, I0, R0], t, args = (beta, gamma))
solution = numpy.array(solution)

# plot result
plt.figure(figsize = [6, 4])
plt.plot(t, solution[:, 0], label = "S(t)")
plt.plot(t, solution[:, 1], label = "I(t)")
plt.plot(t, solution[:, 2], label = "R(t)")
plt.grid()
plt.legend()
plt.xlabel("Time")
plt.ylabel("Proportions")
plt.title("SIR model 2010")
plt.show()

#Graph – 6
# the rec0very rate is 0.066667 and the infecti0n rate is 0.0000000331.
import scipy.integrate
import numpy
import matplotlib.pyplot as plt

def SIR_model(y, t, beta, gamma):
    S, I, R = y
    
    ds_dt = - beta * S * I
    di_dt = beta * S * I - gamma * I
    dr_dt = gamma * I
    return([ds_dt, di_dt, dr_dt])# Initial conditions
S0 = 4325337.9
I0 = 165
R0 = 0.0
beta = 0.000000331
gamma = 0.0666

# time vector
t = numpy.linspace(0, 365, 10000)

# Result
solution = scipy.integrate.odeint(SIR_model, [S0, I0, R0], t, args = (beta, gamma))
solution = numpy.array(solution)

# plot result
plt.figure(figsize = [6, 4])
plt.plot(t, solution[:, 0], label = "S(t)")
plt.plot(t, solution[:, 1], label = "I(t)")
plt.plot(t, solution[:, 2], label = "R(t)")
plt.grid()
plt.legend()
plt.xlabel("Time")
plt.ylabel("Proportions")
plt.title("SIR model 2011")
plt.show()

#Graph – 7
# the rec0very rate is 0.066667 and the infecti0n rate is 0.0000000245
import scipy.integrate
import numpy
import matplotlib.pyplot as plt

def SIR_model(y, t, beta, gamma):
    S, I, R = y
    
    ds_dt = - beta * S * I
    di_dt = beta * S * I - gamma * I
    dr_dt = gamma * I
    return([ds_dt, di_dt, dr_dt])
    
    # Initial conditions
S0 = 4403420.1
I0 = 264
R0 = 0.0
beta = 0.000000245
gamma = 0.0666

# time vector
t = numpy.linspace(0, 365, 10000)

# Result
solution = scipy.integrate.odeint(SIR_model, [S0, I0, R0], t, args = (beta, gamma))
solution = numpy.array(solution)

# plot result
plt.figure(figsize = [6, 4])
plt.plot(t, solution[:, 0], label = "S(t)")
plt.plot(t, solution[:, 1], label = "I(t)")
plt.plot(t, solution[:, 2], label = "R(t)")
plt.grid()
plt.legend()
plt.xlabel("Time")
plt.ylabel("Proportions")
plt.title("SIR model 2012")
plt.show()

#Graph – 8
# the rec0very rate is 0.066667 and the infecti0n rate is 0.0000000305.
import scipy.integrate
import numpy
import matplotlib.pyplot as plt

def SIR_model(y, t, beta, gamma):
    S, I, R = y
    
    ds_dt = - beta * S * I
    di_dt = beta * S * I - gamma * I
    dr_dt = gamma * I
    return([ds_dt, di_dt, dr_dt])
    
    # Initial conditions
S0 = 4486744.5
I0 = 162
R0 = 0.0
beta = 0.000000305
gamma = 0.0666

# time vector
t = numpy.linspace(0, 365, 10000)

# Result
solution = scipy.integrate.odeint(SIR_model, [S0, I0, R0], t, args = (beta, gamma))
solution = numpy.array(solution)

# plot result
plt.figure(figsize = [6, 4])
plt.plot(t, solution[:, 0], label = "S(t)")
plt.plot(t, solution[:, 1], label = "I(t)")
plt.plot(t, solution[:, 2], label = "R(t)")
plt.grid()
plt.legend()
plt.xlabel("Time")
plt.ylabel("Proportions")
plt.title("SIR model 2013")
plt.show()

#Graph – 9

# the rec0very rate is 0.066667 and the infecti0n rate is 0.0000000253.
import scipy.integrate
import numpy
import matplotlib.pyplot as plt



def SIR_model(y, t, beta, gamma):
    S, I, R = y
    
    ds_dt = - beta * S * I
    di_dt = beta * S * I - gamma * I
    dr_dt = gamma * I
    return([ds_dt, di_dt, dr_dt])
    
    # Initial conditions
S0 = 4575605.1
I0 = 153
R0 = 0.0
beta = 0.000000253
gamma = 0.0666

# time vector
t = numpy.linspace(0, 365, 10000)

# Result
solution = scipy.integrate.odeint(SIR_model, [S0, I0, R0], t, args = (beta, gamma))
solution = numpy.array(solution)

# plot result
plt.figure(figsize = [6, 4])
plt.plot(t, solution[:, 0], label = "S(t)")
plt.plot(t, solution[:, 1], label = "I(t)")
plt.plot(t, solution[:, 2], label = "R(t)")
plt.grid()
plt.legend()
plt.xlabel("Time")
plt.ylabel("Proportions")
plt.title("SIR model 2014")
plt.show()


#Graph – 10

# the rec0very rate is 0.066667 and the infecti0n rate is 0.0000000198
import scipy.integrate
import numpy
import matplotlib.pyplot as plt
def SIR_model(y, t, beta, gamma):
    S, I, R = y
    
    ds_dt = - beta * S * I
    di_dt = beta * S * I - gamma * I
    dr_dt = gamma * I
    return([ds_dt, di_dt, dr_dt])
    # Initial conditions
S0 = 4670104.9
I0 = 340
R0 = 0.0
beta = 0.000000198
gamma = 0.0666

# time vector
t = numpy.linspace(0, 365, 10000)

# Result
solution = scipy.integrate.odeint(SIR_model, [S0, I0, R0], t, args = (beta, gamma))
solution = numpy.array(solution)

# plot result
plt.figure(figsize = [6, 4])
plt.plot(t, solution[:, 0], label = "S(t)")
plt.plot(t, solution[:, 1], label = "I(t)")
plt.plot(t, solution[:, 2], label = "R(t)")
plt.grid()
plt.legend()
plt.xlabel("Time")
plt.ylabel("Proportions")
plt.title("SIR model 2015")
plt.show()
